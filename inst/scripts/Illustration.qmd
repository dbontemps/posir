---
title: "Simulating DNA copy number signals"
author: "P. Neuvial and D. Bontemps"
format:
  html:
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r setup}
library("jointseg")
library("posir")
```

Generate data with known truth:

> for simplicity, only have two types of regions: one is centered around 0 and corresponds to 2 DNA copies (normal region), the other one corresponds to 3 DNA copies (region with a copy number alteration, CNA). The latter is not centered around 1 for biological/experimental reasons.

```{r signal}
## load known real copy number regions
affyDat <- acnr::loadCnRegionData(dataSet="GSE29172", tumorFraction=1)
# population means
mu_l <- mean(subset(affyDat, region == "(0,1)")$c) # mean of region with 1 copies (loss)
mu_0 <- mean(subset(affyDat, region == "(1,1)")$c) # mean of region with 2 copies (normal)
mu_g <- mean(subset(affyDat, region == "(1,2)")$c) # mean of region with 3 copies (gain)
dat <- subset(affyDat, region %in% c("(0,1)", "(1,1)", "(1,2)"))

## generate a synthetic CN profile
K <- 10
n <- 1e4
set.seed(20250603)
sim <- getCopyNumberDataByResampling(n, K, regData=dat, minLength = 200)
true_bkp <- sim$bkp # "bkp positions (the last row index before a breakpoint)"


Y <- sim$profile$c
```

Data without annotation
```{r}
ylims <- rbind(0.5, 3)
plotSeg(Y, ylims = ylims)
```

Data with true breakpoints and corresponding empirical segment means
```{r}
plotSeg(Y, breakpoints = true_bkp, ylims = ylims)
```

Adding the population means
```{r}
plotSeg(Y, breakpoints = true_bkp, ylims = ylims)
abline(h = c(mu_0, mu_l, mu_g), col = "darkgray", lty = "dashed")
```

Now we can build simultaneous confidence intervals for the mean of each segment, at a confidence level of .95 (at this stage the true breakpoint positions are used!)

```{r conf-int-true-bkp}
delta <- max(10/n, 0.005) # internal limitation of posir
posirCI <- posir::confidence_intervals_1D(Y, true_bkp, delta, 0.05)
plot(posirCI, box = TRUE, ylim = ylims, 
     xlab = "Chromosomal position", ylab = "DNA copy number")
abline(h = c(mu_0, mu_l, mu_g), col = "darkgray", lty = "dashed")
```


Segment (asking for twice the true number of breakpoints)

```{r segmentation}
seg <- doDynamicProgramming(Y, K = 20)
seg$bkp
plotSeg(Y, breakpoints = list(seg$bkp, true_bkp), ylims = ylims)
abline(h = c(mu_0, mu_l, mu_g), col = "darkgray", lty = "dashed")
```


Now we can build simultaneous confidence intervals for the mean of each segment, at a confidence level of .95

```{r conf-int-seg}
delta <- max(10/n, 0.005) # internal limitation of posir
posirCI <- posir::confidence_intervals_1D(Y, seg$bkp, delta, 0.05)
plot(posirCI, box = TRUE, ylim = ylims, 
     xlab = "Chromosomal position", ylab = "DNA copy number")
abline(h = c(mu_0, mu_l, mu_g), col = "darkgray", lty = "dashed")
```

Note that by construction, the confidence intervals displayed in both plots are valid simultaneously!


Compute the empirical mean for each segment in the true segmentation, and add it to the previous plot

```{r segment-mean}
bx <- c(0, true_bkp, n) + 0.5
seg_means <- matrixStats::binMeans(Y, x = seq(along = Y), bx = bx)
plot(posirCI)
for(i in 1:K) abline(v=true_bkp[i]+0.5, col="blue")
for(i in 1:(K+1)) lines(c(bx[i],bx[i+1]), rep(seg_means[i],2), col="blue")
```

## References

Pierre-Jean, M., Rigaill, G., & Neuvial, P. (2015). Performance evaluation of DNA copy number segmentation methods. Briefings in bioinformatics, 16(4), 600-615.
https://pubmed.ncbi.nlm.nih.gov/25202135/

Bontemps, D., Bachoc, F., & Neuvial, P. (2025). Inference post region selection. Preprint.
