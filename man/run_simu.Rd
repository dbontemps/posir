% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batches.R
\name{run_simu}
\alias{run_simu}
\title{Launch the simulation of trajectories of the 1D or 2D POSIR process}
\usage{
run_simu(
  Ntot,
  Batchsize,
  Ndis,
  deltagrid,
  gridname,
  maxmatrixsize,
  sim_root_dir = "",
  NameBaseBatch = "Batch",
  rDisName = "rnorm",
  NameDis = "Gaussian",
  is_standard = TRUE,
  d = 1,
  ErLev = 0.001
)
}
\arguments{
\item{Ntot}{initial number of trajectories planned to be simulated.}

\item{Batchsize}{number of trajectories simulated in each batch.}

\item{Ndis}{discretisation parameter of the POSIR process.}

\item{deltagrid}{grid for \eqn{\delta}.}

\item{gridname}{name of the grid for \eqn{\delta}.}

\item{maxmatrixsize}{maximum number of i.i.d. random variables
to be simultaneously simulated.}

\item{sim_root_dir}{root directory of the simulations. Both "" and "."
stand for the current working directory.}

\item{NameBaseBatch}{prefix (beginning) of the file name for batches,
without the path. See \code{\link[=simulationDir]{simulationDir()}} for the directory used.}

\item{rDisName}{name (string) of the distribution function.}

\item{NameDis}{name, or short description (of type string),
of the distribution of the i.i.d. random variables
that are summed in the POSIR process.

NameDis differs from rDisName, when this last parameter is also used,
in such that rDisName is the name of the \code{Rcpp} or \code{R} function,
while NameDis may be any string you choose.}

\item{is_standard}{whether the POSIR process is to be standardized
(in particular if the standard deviation of the distribution is not 1).}

\item{d}{dimension parameter of the POSIR process (1 or 2).}

\item{ErLev}{tolerance level against which a number is considered an integer.}
}
\value{
A matrix of simulated POSIR process trajectories (in lines).
}
\description{
The trajectories are regrouped by batches, which are parallelised.
}
\examples{
logger::log_info("Running examples for run_simu()",
                 namespace = "posir")
sim_dir <- local_init_testing(do_multi = TRUE, envir=sys.frame(sys.nframe()))
run_simu(500, 50, 100, seq(10, 1, -1) / 10, "de 1 à .1", 10^6, sim_dir)
future::plan(future::sequential)
run_simu(30, 10, 100, seq(10, 1, -1) / 10, "de 1 à .1", 10^6, sim_dir, d = 2)
withr::deferred_run(envir=sys.frame(sys.nframe()))
}
\seealso{
\code{\link[=run_batches_range]{run_batches_range()}}, \code{\link[=write_batch]{write_batch()}}, \code{\link[=compute_quantiles]{compute_quantiles()}}, \code{\link[=compute_error_levels]{compute_error_levels()}}
}
