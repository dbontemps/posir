% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/error_levels.R
\name{extract_error_levels}
\alias{extract_error_levels}
\title{Estimate effective error levels from simulated trajectories and quantiles}
\usage{
extract_error_levels(Zt, Q, precN)
}
\arguments{
\item{Zt}{transposed matrix of simulated trajectories (in columns),
for a discretized random process.}

\item{Q}{quantile table (matrix) of the limit random process.}

\item{precN}{how many decimals for the effective error level estimations
(used in particular in exporting the table to a file).}
}
\value{
A table (matrix) of estimated effective error levels.
}
\description{
For each discretisation point \eqn{\delta} of the processes,
compute the proportion of trajectories that in \eqn{\delta}
are bigger than the corresponding quantile.
}
\details{
Nothing forces us to only use this function with the 1D or 2D POSIR process!
}
\examples{
N <- 1000
dfs <- 3:5
alphagrid <- c(.5, .1, .05, .01)
m <- max(dfs)
Z <- matrix(stats::rnorm(N * m), N, m)^2
Zt <- as.matrix(apply(Z, 1, cumsum))[dfs, ] # apply transpose
rownames(Zt) <- dfs
Q <- as.matrix(cbind(sapply(dfs, function(df) {
  stats::qchisq(1 - alphagrid, df)
})))
colnames(Q) <- dfs
rownames(Q) <- alphagrid
extract_error_levels(Zt, Q, 3)
}
\seealso{
\code{\link[=extract_quantiles]{extract_quantiles()}}, \code{\link[=run_simu]{run_simu()}}, \code{\link[=compute_error_levels]{compute_error_levels()}}
}
