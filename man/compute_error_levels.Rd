% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/error_levels.R
\name{compute_error_levels}
\alias{compute_error_levels}
\title{Computes and save effective error levels for the POSIR process}
\usage{
compute_error_levels(
  Ntot,
  Batchsize,
  Ndis,
  deltagrid,
  posdelta,
  gridname,
  maxmatrixsize,
  sim_root_dir = "",
  Qtable = NULL,
  filenamebasis = "Table_niveaux_effectifs.txt",
  NameBaseBatch = "Batch",
  rdistrib = rCenteredPareto,
  NameDis = "Pareto3",
  precN = floor(log10(Ntot)/2) + 2,
  d = 1,
  ErLev = 0.001
)
}
\arguments{
\item{Ntot}{initial number of trajectories planned to be simulated.}

\item{Batchsize}{number of trajectories simulated in each batch.}

\item{Ndis}{discretisation parameter of the POSIR process.}

\item{deltagrid}{grid for \eqn{\delta} previously used in computing the quantiles.}

\item{posdelta}{vector of indexes to define a sub-grid for \eqn{\delta}.
The resulting sub-grid (subset of the grid) deltagrid[posdelta]
is used in \code{\link[=run_simu]{run_simu()}} to discretize the POSIR process trajectories.}

\item{gridname}{name of the sub-grid for \eqn{\delta},
to be used in \code{\link[=simulationDir]{simulationDir()}}
for the path definition of the error levels table.
#@param longdgrid_name name of the initial grid for \eqn{\delta},
to be used in \code{\link[=simulationDir]{simulationDir()}} to retrieve the path of the quantile table.
#@param NameFQ file name (with path) of the quantile table.
#If NameFQ is NULL, the file name is computed anew using \code{\link[=simulationDir]{simulationDir()}}
#from d, NdisQ, longdgrid_name, and filenamebasisQ.
#@param filenamebasisQ file name for the quantile table (without the path).}

\item{maxmatrixsize}{maximum number of i.i.d. random variables
to be simultaneously simulated.}

\item{sim_root_dir}{root directory of the simulations. Both "" and "."
stand for the current working directory.}

\item{Qtable}{a table of (estimated) quantiles for a POSIR process;
if NULL, then the pre-computed tables supplied with the package are used;
otherwise, Qtable must be a matrix,
whose colnames indicate a grid of delta values,
whose rownames indicate a grid of probability values,
and where both are sorted in decreasing order.}

\item{filenamebasis}{file name for the error levels table (without the path).}

\item{NameBaseBatch}{prefix (beginning) of the file name for batches,
without the path. See \code{\link[=simulationDir]{simulationDir()}} for the directory used.}

\item{rdistrib}{distribution (Function) of the i.i.d. random variables
that are summed in the POSIR process.}

\item{NameDis}{name, or short description (of type string),
of the distribution of the i.i.d. random variables
that are summed in the POSIR process.}

\item{precN}{how many decimals for the effective error level estimations
(used in particular in exporting the table to a file).}

\item{d}{dimension parameter of the POSIR process (1 or 2).}

\item{ErLev}{tolerance level against which a number is considered an integer.}
}
\value{
A table of (simultaneous) effective error levels,
only if the error levels file does not already exist,
else the function returns NULL.
}
\description{
Computes Monte-Carlo estimations
of the effective error levels of confidence intervals
for a discretized, possibly non-Gaussian, 1D or 2D POSIR process,
then save them in a file.
}
\details{
#@param NdisQ discretisation parameter previously used in computing the quantiles.
}
\examples{
logger::log_info("Running examples for compute_error_levels()",
                 namespace = "posir")
sim_dir <- local_init_testing(do_multi = TRUE,
                              envir=sys.frame(sys.nframe()))
mypathQ <- paste(find.package("posir"),
  "/extdata/SavedOutputs/QTable_1040_10080.txt",
  sep = ""
)
Qtable = as.matrix(read.table(mypathQ))
colnames(Qtable) = substring(colnames(Qtable),2)
compute_error_levels(
  1000, 50, 40, seq(7, 2, -1) / 8, 1:6, "de .875 Ã  .25",
  10^6, sim_dir, Qtable)
withr::deferred_run(envir=sys.frame(sys.nframe()))
}
\seealso{
\code{\link[=run_simu]{run_simu()}}, \code{\link[=extract_error_levels]{extract_error_levels()}}, \code{\link[=write_error_levels]{write_error_levels()}}, \code{\link[=compute_quantiles]{compute_quantiles()}}
}
